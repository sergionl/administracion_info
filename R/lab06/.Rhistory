summary(y)
head(x)
tail(x)
head(x,7)
table(iris$Species)
x<-x^2
x
x[1,3]
x[1:3]
x[c(1,3)]
x[x>25]
x[3:1]
x[-(1:2)]
x[-length(x)]
w<-table(iris$Species)
w["setosa"]
w[c("cetosa","virginica")]
w[c("setosa","virginica")]
colnames(my.iris)[5]<-"Especie"
colnames((my.iris))
z<-table(iris$Species)
names(z)
names(z)[1]<-"tipo 1"
names(z)
z<-1:10
z
z[z<5]<-100
x<-1:10
x
sample(x,4)
sample(x,50)
sample(x,50,replace = TRUE)
x<-1:10
x
mean(x)
max(x)
median(x)
sum(x)
prod(x)
x
suma_cuadrados<-function(x)<-sum(x*x)
suma_cuadrados<-function(x) sum(x*x)
suma_cuadrados(x)
x
media<-function(x){}
rm(media)
media<-funtion(x){
longitud<-length(x)
suma<-sum(x)
suma/longitud
}
rm(longitud)
rm(suma)
media<-funtion(x){
longitud<-length(x)
suma<-sum(x)
suma/longitud
}
rm(longitud)
rm(suma)
media <- function(x){
longitud <- length(x)
suma <- sum(x)
suma / longitud
}
media(x)
tapply(iris$Petal.Length,iris$Species,mean)
x<-list("a"=2,25,"b"=TRUE,"c"=1,3)
x<-list("a"=2,25,"b"=TRUE,"c"=1:3)
x
typeof(x)
length(x)
str(x)
x<-list(2.5,TRUE,1:3)
x
> x <- list(name = "John", age = 19, speaks = c("English", "French"))
x
x <- list(name = "John", age = 19, speaks = c("English", "French"))
x
x[c(1:2)]
x[-2]
x[c(T,F,F)]
X[C("age","speacks")]
x[C("age","speacks")]
x[C("age","speasks")]
x[C("age","speaks")]
x[c("age","speaks")]
x[["name"]]
x[["name"]]<-"Patricia"
x
x[["Married"]]<-TRUE
x
str(x)
x[["age"]]<-NULL
str(x)
x$Married<-NULL
str(x)
hist(iris$Sepal.Width)
hist(iris$Sepal.Width, main = "Iris: Histograma de la anchura de los sépalos",
xlab = "anchura del sépalo", ylab = "frecuencia",
col = "steelblue")
barplot(table(iris$Species))
plot(iris$Petal.Length, iris$Petal.Width, main="Edgar Anderson's Iris Da
ta")
boxplot(iris$Sepal.Width ~ iris$Species, col = "gray", main = "Especies
de iris\nsegún la anchura del sépalo")
boxplot(iris$Sepal.Width ~ iris$Species, col = "blue", main = "Especies
de iris\nsegún la anchura del sépalo")
boxplot(iris$Sepal.Width ~ iris$Species, col = "gray", main = "Especies
de iris\nsegún la anchura del sépalo")
help barplot()
help()
help("barplot")
?barplot
head(iris)
head(iris,15)
my.iris$Petal.Length[<3]
my.iris$Petal.Length
my.iris$Petal.Length[1]
my.iris$Petal.Length[my.iris$Petal.Length>3]
attenu
summary(attenu)
my.attenu<-attenu
View(my.attenu)
my.attenu(my.attenu$station="")
my.attenu(my.attenu$station=="")
my.attenu(my.attenu$station==NA)
my.attenu
my.attenu(my.attenu$station)
my.attenu[my.attenu$station=""]
my.attenu[my.attenu$station==""]
my.attenu[my.attenu$station==NA]
x<-c(NA,1,2)
X
x
rm(x)
x
x<-c(NA,1,2)
rm(X[1])
rm(X[0])
rm(x[0])
x[1]<-NULL
X
x
x[1]<-NULL
x<-NULL
x
x<-c(NA,1,2)
x[1]
x[1]<-NULL
x[1]<-NULL
x<-c(NA,1,2)
x
x[!is.na(x)]
x
x<-[!is.na(x)]
a[!is.na(x)]
x[!is.na(x)]
x[!is.na(x)]->x1
x1
x<-c(NA,1,2)
x
x[!is.na(x)]->x1
x1
View(my.attenu)
install.packages("rvest")
install.packages("xml")
install.packages("XML")
library(rvest)
library(rvest)
library(rvest)
library(rvest)
library(rvest)
library(XML)
install.packages("xml")
upc_url <- 'https://pregrado.upc.edu.pe/facultad-de-ingenieria/cienciasde-la-computacion/'
upc_read <- readLines(upc_url, encoding = "UTF-8", warn = FALSE)
upc_url <- 'https://pregrado.upc.edu.pe/facultad-de-ingenieria/ciencias-de-la-computacion/'
upc_read <- readLines(upc_url, encoding = "UTF-8", warn = FALSE)
parsed_upc <- htmlParse(upc_read, encoding = "UTF-8")
upc_enter_text <- parsed_upc["//p"]
View(upc_enter_text)
View(upc_enter_text)
length(upc_enter_text)
upc_enter_text [[10]]
upc_enter_text [[15]]
length(upc_enter_text)
length(getHTMLLinks(upc_read))
length((readHTMLTable(upc_read)))
wiki_url <- 'https://es.wikipedia.org/wiki/Ayuda:Tablas'
wiki_read <- readLines(wiki_url, encoding = "UTF-8", warn = FALSE)
parsed_wiki <- htmlParse(wiki_read, encoding = "UTF-8")
?
htmlParse()
wiki_intro_text <- parsed_wiki["//p"]
wiki_intro_text <- parsed_wiki["//p"]
length(wiki_intro_text)
length(getHTMLLinks(wiki_read))
length((readHTMLTable(wiki_read)))
names(readHTMLTable(wiki_read))
readHTMLTable(wiki_read)$"Una tabla ejemplo\n"
library(xml2)
library(rvest)
pelis <- read_html("https://www.imdb.com/search/title/?count=100&release
_date=2020,2020&title_type=feature")
pelis <- read_html("https://www.imdb.com/search/title/?count=100&release
_date=2020,2020&title_type=feature")
pelis <- read_html("https://www.imdb.com/search/title/?count=100&release_date=2020,2020&title_type=feature")
rank_data_html <- html_nodes(pelis,'.text-primary')
View(rank_data_html)
rank_data <- html_text(rank_data_html)
head(rank_data)
rank_data<-as.numeric(rank_data)
tit_data_html <- html_nodes(pelis,'.lister-item-header a')
tit_data <- html_text(tit_data_html)
head(tit_data)
desc_data_html <- html_nodes(pelis,'.ratings-bar+ .text-muted')
desc_data <- html_text(desc_data_html)
head(desc_data)
desc_data <- gsub("\n","",desc_data)
head(desc_data)
runtime_data_html <- html_nodes(pelis,'.text-muted .runtime')
runtime_data <- html_text(runtime_data_html)
head(runtime_data)
runtime_data<-gsub(" min","",runtime_data)
runtime_data<-as.numeric(runtime_data)
head(runtime_data)
genre_data_html <- html_nodes(pelis,'.genre')
genre_data <- html_text(genre_data_html)
head(genre_data)
genre_data<-gsub("\n","",genre_data)
genre_data<-gsub(" ","",genre_data)
head(genre_data)
genre_data<-gsub(",.*","",genre_data)
head(genre_data)
genre_data<-as.factor(genre_data)
head(genre_data)
rating_data_html<-html_nodes(pelis,'.ratings-imdb-rating strong')
rating_data <- html_text(rating_data_html)
head(rating_data)
rating_data<-as.numeric(rating_data)
head(rating_data)
metascore_data_html <- html_nodes(pelis,'.metascore')
metascore_data <- html_text(metascore_data_html)
head(metascore_data)
metascore_data<-gsub(" ","",metascore_data)
head(metascore_data)
length(metascore_data)
metascore_data<-as.numeric(metascore_data)
head(metascore_data)
votos_data_html <- html_nodes(pelis,'.sort-num_votes-visible span:nth-ch
ild(2)')
votos_data_html <- html_nodes(pelis,'.sort-num_votes-visible span:nth-child(2)')
votos_data <- html_text(votos_data_html)
head(votos_data)
votos_data<-gsub(",","",votos_data)
head(votos_data)
gross_data_html <- html_nodes(pelis,'.ghost~ .text-muted+ span')
gross_data <- html_text(gross_data_html)
head(gross_data)
gross_data<-gsub("M","",gross_data)
gross_data<-substring(gross_data,2,6)
gross_data <- html_text(gross_data_html)
gross_data<-gsub("M","",gross_data)
gross_data<-substring(gross_data,2,6)
head(gross_data)
gross_data<-as.numeric(gross_data)
head(gross_data)
director_data_html <- html_nodes(pelis,'.text-muted+ p a:nth-child(1)')
director_data <- html_text(director_data_html)
head(director_data)
director_data<-as.factor(director_data)
head(director_data)
actor_data_html <- html_nodes(pelis,'.lister-item-content .ghost+ a')
actor_data <- html_text(actor_data_html)
head(actor_data)
actor_data<-as.factor(actor_data)
library('ggplot2')
qplot(data = pelis_df,Runtime,fill = Genero,bins = 30, main="Pelicula: D
uracion vs Genero")
pelis_df<-data.frame(Rank = rank_data, Titulo = tit_data, Runtime = runt
ime_data, Genero = genre_data, Director = director_data, Actor = actor_da
ta)
pelis_df<-data.frame(Rank = rank_data, Titulo = tit_data, Runtime = runtime_data, Genero = genre_data, Director = director_data, Actor = actor_data)
View(pelis_df)
qplot(data = pelis_df,Runtime,fill = Genero,bins = 30, main="Pelicula: D
uracion vs Genero")
tot_pelis <- table(pelis_df$Genero)
head(tot_pelis)
barplot(tot_pelis,main="Distribucion de Peliculas segun Genero",xlab="Ge
nero",ylab="Total Peliculas")
str(pelis_df)
write.csv(pelis_df,'pelis_df.csv', row.names = TRUE)
install.packages("jsonlite")
library(jsonlite)
ine.url <- "https://servicios.ine.es/wstempus/js/ES/DATOS_TABLA/2852?nult=5&tip=AM"
pob.esp <- fromJSON(https://servicios.ine.es/wstempus/js/ES/DATOS_TABLA/2852?nult=5&tip=AM)
pob.esp <- fromJSON(servicios.ine.es/wstempus/js/ES/DATOS_TABLA/2852?nult=5&tip=AM)
install.packages("jsonlite")
install.packages("jsonlite")
ine.url <- "https://servicios.ine.es/wstempus/js/ES/DATOS_TABLA/2852?nult=5&tip=AM"
pob.esp <- fromJSON(ine.url)
pob.esp <- fromJSON(ine.url)
?
fromJSON
pob.esp <- fromJSON(ine.url)
library(jsonlite)
pob.esp <- fromJSON(ine.url)
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
floattrades.url<-"www.floatrates.com/daily/usd.json"
floattrades.url<-"www.floatrates.com/daily/usd.json"
floatrades.data<-fromJSON(floattrades.url)
View(pob.esp)
floattrades.url<-"floatrates.com/daily/usd.json"
floatrades.data<-fromJSON(floattrades.url)
floattrades.url<-"https://www.floatrates.com/daily/usd.json"
floatrades.data<-fromJSON(floattrades.url)
View(floatrades.data)
students.url<-"https://learn-us-east-1-prod-fleet02-xythos.learn.cloudflare.blackboardcdn.com/5f0d0e6d23ee0/36095605?X-Blackboard-Expiration=1619038800000&X-Blackboard-Signature=XbjX%2FunTWnp9mI7GlEtUJiZYg89kmigWfMa038E3tfk%3D&X-Blackboard-Client-Id=301940&response-cache-control=private%2C%20max-age%3D21600&response-content-disposition=inline%3B%20filename%2A%3DUTF-8%27%27students.json&response-content-type=application%2Fjson&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20210421T150000Z&X-Amz-SignedHeaders=host&X-Amz-Expires=21600&X-Amz-Credential=AKIAZH6WM4PL5SJBSTP6%2F20210421%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=78e83714953ad1633732c58e50c183f69c158e8502b0d1b7df8aea13a8122721"
students.data<-fromJSON(students.url)
View(students.data)
studentscourse.data<-fromJSON(studentscourse.url)
studentscourse.url<-"https://learn-us-east-1-prod-fleet02-xythos.learn.cloudflare.blackboardcdn.com/5f0d0e6d23ee0/36095603?X-Blackboard-Expiration=1619038800000&X-Blackboard-Signature=yIB4Fx0rMkdp8ApsWLBQ9DJ3q%2Fg0V8h9wQ9SH4BM4rU%3D&X-Blackboard-Client-Id=301940&response-cache-control=private%2C%20max-age%3D21600&response-content-disposition=inline%3B%20filename%2A%3DUTF-8%27%27student-courses.json&response-content-type=application%2Fjson&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20210421T150000Z&X-Amz-SignedHeaders=host&X-Amz-Expires=21600&X-Amz-Credential=AKIAZH6WM4PL5SJBSTP6%2F20210421%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=803fddacfad39aac6af6eac782766a4c0ebb3cd2e014f96b1486c9629e70c55c"
studentscourse.data<-fromJSON(studentscourse.url)
View(studentscourse.data)
install.packages("XML").
install.packages("XML")
library(XML)
bm.url <-"http://api.worldbank.org/v2/countries/all/indicators/NY.GDP.MKTP.CD?date=2019:2020&per_page=500&page=1"
bm.doc <- xmlParse(bm.url)
bm.url <-"api.worldbank.org/v2/countries/all/indicators/NY.GDP.MKTP.CD?date=2019:2020&per_page=500&page=1"
bm.doc <- xmlParse(bm.url)
bm.doc <- xmlParse(bm.url)
root.node <- xmlRoot(bm.doc)
root.node[1]
root.node[2]
bm.data <- xmlSApply(root.node, function(x) xmlSApply(x, xmlValue))
View(bm.data)
bm.datos <- data.frame(t(bm.data), row.names = NULL)
library(XML)
ct.url<-"https://upcedupe-my.sharepoint.com/personal/pcsiprey_upc_edu_pe/_layouts/15/onedrive.aspx?originalPath=aHR0cHM6Ly91cGNlZHVwZS1teS5zaGFyZXBvaW50LmNvbS86ZjovZy9wZXJzb25hbC9wY3NpcHJleV91cGNfZWR1X3BlL0VtVjdhTnFrcmdoRmhhcWtKNlBmTnRrQktZVDhXbTh6TFJDNWY1NFhfZTYzQUE_cnRpbWU9N1ladFc5Z0UyVWc&id=%2Fpersonal%2Fpcsiprey_upc_edu_pe%2FDocuments%2Fdata%2Fcd_catalog%2Exml&parent=%2Fpersonal%2Fpcsiprey_upc_edu_pe%2FDocuments%2Fdata"
ct.doc<-xmlParse(ct.url)
library(XML)
ct.rt<-read.xml("")
ct.rt<-xmlParse(file = "D:\administracion_info\lab05\data\cd_catalog")
ct.rt<-xmlParse(file = "D:/administracion_info/lab05/data/cd_catalog")
ct.rt<-xmlParse(file = "D:/administracion_info/lab05/data/cd_catalog.xml")
ct.rt<-xmlParse(file = "cd_catalog.xml")
ct.rt<-xmlParse(file = "cd_catalog")
ct.rt<-xmlParse("https://www.w3schools.com/xml/cd_catalog.xml")
ct.url<-"https://www.w3schools.com/xml/cd_catalog.xml"
ct.rt<-xmlParse(ct.url)
install.packages("XML")
install.packages("XML")
library(XML)
ct.url<-"https://www.w3schools.com/xml/cd_catalog.xml"
ct.rt<-xmlParse(ct.url)
ct.url<-"http://www.w3schools.com/xml/cd_catalog.xml"
ct.rt<-xmlParse(ct.url)
ct.url<-"http://www.w3schools.com/xml/cd_catalog.xml"
ct.rt<-xmlParse(ct.url)
install.packages("RCurl")
library(RCurl)
url<-"http://www.w3schools.com/xml/cd_catalog.xml"
ct.url<-getURL(url)
ct.rt<-xmlParse(ct.url)
url<-"https://www.w3schools.com/xml/cd_catalog.xml"
ct.url<-getURL(url)
url<-"https://www.w3schools.com/xml/cd_catalog.xml"
ct.url<-getURL(url)
url<-"http://www.w3schools.com/xml/cd_catalog.xml"
ct.url<-getURL(url)
ct.rt<-xmlParse(ct.url)
url<-"http://www.w3schools.com/xml/cd_catalog.xml"
ct.url<-getURL(url)
ct.rt<-xmlTreeParse(ct.url)
ct.url<-"http://www.w3schools.com/xml/cd_catalog.xml"
ct.rt<-xmlTreeParse(ct.url)
url <- "http://www.w3schools.com/xml/cd_catalog.xml"
xmldoc <- xmlParse(url)
download.file(url, destfile = "./data/cd_catalog.xml")
root.node[1]
library(XML)
bm.url <-"api.worldbank.org/v2/countries/all/indicators/NY.GDP.MKTP.CD?date=2019:2020&per_page=500&page=1"
bm.doc <- xmlParse(bm.url)
root.node <- xmlRoot(bm.doc)
bm.doc <- xmlParse(bm.url)
bm.url <-"http://api.worldbank.org/v2/countries/all/indicators/NY.GDP.MKTP.CD?date=2019:2020&per_page=500&page=1"
bm.doc <- xmlParse(bm.url)
root.node <- xmlRoot(bm.doc)
root.node[1]
root.node[2]
bm.data <- xmlSApply(root.node, function(x) xmlSApply(x, xmlValue))
bm.datos <- data.frame(t(bm.data), row.names = NULL)
url <- "http://www.w3schools.com/xml/cd_catalog.xml"
ct.doc <- xmlParse(url)
ct.doc <- xmlTreeParse(url)
download.file(url, destfile = "D:/administracion_info/lab05/data")
download.file(url, destfile = "./data/cd_catalog.xml")
library(XML)
library(methods)
data<-xmlParse(file = "cd_catalog")
data<-xmlParse(file = "cd_catalog.xml")
data<-xmlParse("cd_catalog.xml")
data<-xmlParse("D:/administracion_info/lab05/data/cd_catalog")
data<-xmlParse("D:/administracion_info/lab05/data/cd_catalog.xml")
root.node <- xmlRoot(data)
root.node[1]
ct.data <- xmlSApply(root.node, function(x) xmlSApply(x, xmlValue))
View(bm.datos)
ct.datos <- data.frame(t(ct.data), row.names = NULL)
View(ct.datos)
setwd("D:\administracion_info\lab06")
setwd("D:/administracion_info/lab06")
data<-read.csv("D:/administracion_info/lab06/dataset/missing-data.csv")
View(data)
View(data)
data.limpia<-na.omit(data)
View(data.limpia)
is.na(data[4,2])
is.na(data[4,1])
is.na(data$Income)
is.na(data$Phone_type)
data1<-read.csv("D:/administracion_info/lab06/dataset/missing-data.csv", na = c("", "NA", "N/A"))
View(data1)
View(data1)
setwd("D:/administracion_info/lab06")
data<-read.csv("D:/administracion_info/lab06/dataset/missing-data.csv", na = c("", "NA", "N/A"))
data.limpia<-na.omit(data)
is.na(data[4,2])
is.na(data[4,1])
is.na(data$Income)
data.income.limpio <- data[!is.na(data$Income),]
View(data.income.limpio)
complete.cases(data)
data.limpia2 <- data[complete.cases(data),]
data$Income[data$Income == 0]
data$Income[data$Income == 0] <- NA
data$Income[data$Income == 0]
View(data)
View(data)
#caso 4
mean(data$Income)
mean(data$Income, na.rm=TRUE)
sd(data$Income)
sd(data$Income, na.rm=TRUE)
sum(data$Income)
sum(data$Income, na.rm=TRUE)
data <- read.csv("D:/administracion_info/lab06/dataset/missing-data.csv", na.strings = "" )
View(data)
data$Income[data$Income == 0] <- NA
data$Income.mean <- ifelse(is.na(data$Income), mean(data$Income, na.rm =TRUE), data$Income)
View(data)
rand.valor <- function(x){
faltantes <- is.na(x)
tot.faltantes <- sum(faltantes)
x.obs <- x[!faltantes]
valorado <- x
valorado[faltantes] <- sample(x.obs, tot.faltantes, replace = TRUE)
return (valorado)
}
df
random.df <- function(df, cols){
nombres <- names(df)
for (col in cols) {
nombre <- paste(nombres[col], "valorado", sep = ".")
df[nombre] <- rand.valor(df[,col])
}
df
}
data.limpio <- random.df(data, c(1,2))
View(data.limpio)
familia <- data.frame(familia.salario, familia.integrantes, familia.auto)
familia <- data.frame(familia.salario, familia.integrantes, familia.auto)
familia.salario <- c(40000,60000,50000, 80000, 60000, 70000, 60000)
familia.integrantes <- c(4,3,2,2,3,4,3)
familia.auto <- c("Lujo", "Compacto", "SUV", "Lujo", "Compacto", "Compacto", "Compacto")
familia <- data.frame(familia.salario, familia.integrantes, familia.auto)
duplicated(familia)
familia[duplicated(familia),]
unique(familia)
familias.unicas <- unique(familia)
View(familias.unicas)
familia.salario <- c(40000,60000,50000, 80000, 60000, 70000, 60000)
familia.integrantes <- c(4,3,2,2,3,4,3)
familia.auto <- c("Lujo", "Compacto", "SUV", "Lujo", "Compacto", "Compacto", "Compacto")
familia <- data.frame(familia.salario, familia.integrantes, familia.auto)
duplicated(familia)
familia[duplicated(familia),]
unique(familia)
rand.valor <- function(x){
faltantes <- is.na(x)
tot.faltantes <- sum(faltantes)
x.obs <- x[!faltantes]
valorado <- x
valorado[faltantes] <- sample(x.obs, tot.faltantes, replace = TRUE)
return (valorado)
}
random.df <- function(df, cols){
nombres <- names(df)
for (col in cols) {
nombre <- paste(nombres[col], "valorado", sep = ".")
df[nombre] <- rand.valor(df[,col])
}
df
}
data <- read.csv("D:/administracion_info/lab06/dataset/missing-data.csv", na.strings = "" )
data$Income[data$Income == 0] <- NA
data$Income.mean <- ifelse(is.na(data$Income), mean(data$Income, na.rm =TRUE), data$Income)
data.limpio <- random.df(data, c(1,2))
